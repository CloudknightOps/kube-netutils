name: Build, Scan and Push kube-netutils Image

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.image-tag }}
      latest-tag: ${{ steps.set-tag.outputs.latest-tag }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Timestamp Tag
        id: set-tag
        run: |
          TAG=$(date +'%Y%m%d.%H%M')
          IMAGE=cloudopsknight/kube-netutils
          echo "image-tag=${IMAGE}:${TAG}" >> "$GITHUB_OUTPUT"
          echo "latest-tag=${IMAGE}:latest" >> "$GITHUB_OUTPUT"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image (tagged with timestamp and latest)
        run: |
          docker build -t ${{ steps.set-tag.outputs.image-tag }} -t ${{ steps.set-tag.outputs.latest-tag }} .

      - name: Push image for remote scanning
        run: |
          docker push ${{ steps.set-tag.outputs.image-tag }}

  scan:
    name: Scan Image with Trivy
    runs-on: ubuntu-latest
    needs: build
    outputs:
      passed: ${{ steps.check.outputs.passed }}
    steps:
      - name: Print Table Scan for Logging (non-failing)
        run: |
          docker run --rm aquasec/trivy:latest image \
            --severity HIGH,CRITICAL \
            --ignore-unfixed \
            --format table \
            ${{ needs.build.outputs.image-tag }} || true

      - name: Run Scan in JSON Format (for logic)
        run: |
          docker run --rm aquasec/trivy:latest image \
            --severity HIGH,CRITICAL \
            --ignore-unfixed \
            --format json \
            -o trivy-results.json \
            ${{ needs.build.outputs.image-tag }}

      - name: Check for HIGH/CRITICAL vulnerabilities
        id: check
        run: |
          COUNT=$(jq '[.[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | select(.Severity == "HIGH" or .Severity == "CRITICAL")] | length' trivy-results.json)
          echo "Found $COUNT HIGH/CRITICAL vulnerabilities"
          if [ "$COUNT" -gt 0 ]; then
            exit 1
          fi
          echo "passed=true" >> "$GITHUB_OUTPUT"

  push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: [build, scan]
    if: needs.scan.outputs.passed == 'true'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Latest Tag (timestamp tag already pushed in build job)
        run: |
          docker pull ${{ needs.build.outputs.image-tag }}
          docker tag ${{ needs.build.outputs.image-tag }} ${{ needs.build.outputs.latest-tag }}
          docker push ${{ needs.build.outputs.latest-tag }}
